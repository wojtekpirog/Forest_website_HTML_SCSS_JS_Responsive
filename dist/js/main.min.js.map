{"version":3,"sources":["main.js"],"names":["navbar","toggleButton","navbarLinksContainer","navbarLinks","overlay","navbarHeight","resetButton","submitButton","footerYear","allSections","contactFormControls","prepareDOMElements","document","querySelector","querySelectorAll","offsetHeight","addListeners","addEventListener","toggleNavbarMenu","closeNavbarMenu","handleFormClear","window","innerWidth","handleScrollSpy","event","preventDefault","forEach","input","value","classList","toggle","contains","setAttribute","remove","body","dataset","mainPage","activeSectionId","sections","section","scrollY","offsetTop","push","add","id","navbarLink","concat","setFooterYear","currentYear","Date","getFullYear","textContent"],"mappings":"AAAA,aACA,IAAIA,EACAC,EACAC,EACAC,EAEAC,EAEAC,EAKAC,EACAC,EAEAC,EAEAC,EAEAC,EAQEC,EAAqB,WACzBX,EAASY,SAASC,cAAc,WAChCZ,EAAeW,SAASC,cAAc,wBACtCX,EAAuBU,SAASC,cAAc,kBAC9CV,EAAcS,SAASE,iBAAiB,iBAExCV,EAAUQ,SAASC,cAAc,oBAEjCL,EAAaI,SAASC,cAAc,2BAEnBD,SAASC,cAAc,eACxBD,SAASC,cAAc,cAEvCP,EAAcM,SAASC,cAAc,gCACrCN,EAAeK,SAASC,cAAc,iCAEtCJ,EAAcG,SAASE,iBAAiB,iBAExCJ,EAAsBE,SAASE,iBAAiB,wBAEhDT,EAAeL,EAAOe,YACxB,EAEMC,EAAe,WACnBf,EAAagB,iBAAiB,QAASC,GACvCd,EAAQa,iBAAiB,QAASE,GAClCb,EAAYW,iBAAiB,QAASG,GACtCb,EAAaU,iBAAiB,QAASG,GAEvCC,OAAOJ,iBAAiB,UAAU,WAAA,OAAMI,OAAOC,YAAc,KAAOH,GAAiB,IACrFE,OAAOJ,iBAAiB,SAAUM,EACpC,EAEMH,EAAkB,SAACI,GACvBA,EAAMC,iBAENf,EAAoBgB,SAAQ,SAACC,GAAK,OAAKA,EAAMC,MAAQ,EAAE,GACzD,EAEMV,EAAmB,WACvBjB,EAAa4B,UAAUC,OAAO,+BAC9B5B,EAAqB2B,UAAUC,OAAO,yBACtC1B,EAAQyB,UAAUC,OAAO,2BAErB5B,EAAqB2B,UAAUE,SAAS,0BAC1C9B,EAAa+B,aAAa,gBAAiB,QAC3C/B,EAAa+B,aAAa,aAAc,8BAExC/B,EAAa+B,aAAa,gBAAiB,SAC3C/B,EAAa+B,aAAa,aAAc,2BAE5C,EAEMb,EAAkB,WACtBf,EAAQyB,UAAUI,OAAO,2BACzBhC,EAAa4B,UAAUI,OAAO,+BAC9BhC,EAAa+B,aAAa,gBAAiB,SAC3C/B,EAAa+B,aAAa,aAAc,2BACxC9B,EAAqB2B,UAAUI,OAAO,wBACxC,EAEMV,EAAkB,WAEtB,GAAuC,SAAnCX,SAASsB,KAAKC,QAAQC,SAAqB,CAC7C,IAWIC,EAXEC,EAAW,GAEjB7B,EAAYiB,SAAQ,SAACa,GACflB,OAAOmB,SAAWD,EAAQxB,aAAewB,EAAQE,UAAYpC,GAC/DiC,EAASI,KAAKH,EAElB,IAEA9B,EAAYiB,SAAQ,SAACa,GAAO,OAAKA,EAAQV,UAAUI,OAAO,uBAAuB,IACjFK,EAAS,GAAGT,UAAUc,IAAI,wBAG1BlC,EAAYiB,SAAQ,SAACa,GAAO,OAAKA,EAAQV,UAAUE,SAAS,0BAA4BM,EAAkBE,EAAQK,GAAG,IAErHzC,EAAYuB,SAAQ,SAACmB,GAAU,OAAKA,EAAWhB,UAAUI,OAAO,uBAAuB,IACvFrB,SAASC,cAAa,wBAAAiC,OAAyBT,EAAe,OAAMR,UAAUc,IAAI,uBACpF,CACF,EAEMI,EAAgB,WACpB,IAAMC,GAAc,IAAIC,MAAOC,cAC/B1C,EAAW2C,YAAcH,CAC3B,EAEApC,SAASK,iBAAiB,oBA9Fb,WACXN,IACAK,IACA+B,GACF","file":"main.min.js","sourcesContent":["// Navbar\r\nlet navbar;\r\nlet toggleButton;\r\nlet navbarLinksContainer;\r\nlet navbarLinks;\r\n// Overlay\r\nlet overlay;\r\n// `offsetHeight` of navbar\r\nlet navbarHeight;\r\n// Contact form controls\r\nlet firstNameInput;\r\nlet lastNameInput;\r\n// Contact form buttons\r\nlet resetButton;\r\nlet submitButton;\r\n// Footer\r\nlet footerYear;\r\n// All sections on the page that need to be spied on when scrolling\r\nlet allSections;\r\n// All input elements inside the contact form\r\nlet contactFormControls;\r\n\r\nconst main = () => {\r\n  prepareDOMElements();\r\n  addListeners();\r\n  setFooterYear();\r\n}\r\n\r\nconst prepareDOMElements = () => {\r\n  navbar = document.querySelector(\".navbar\");\r\n  toggleButton = document.querySelector(\".navbar__burger-icon\");\r\n  navbarLinksContainer = document.querySelector(\".navbar__links\");\r\n  navbarLinks = document.querySelectorAll(\".navbar__link\");\r\n  // Overlay\r\n  overlay = document.querySelector(\".navbar__overlay\");\r\n  // Footer\r\n  footerYear = document.querySelector(\".footer__copyright-year\");\r\n  // Contact form controls\r\n  firstNameInput = document.querySelector(\"#first-name\");\r\n  lastNameInput = document.querySelector(\"#last-name\");\r\n  // Contact form buttons\r\n  resetButton = document.querySelector(\".contact__form-button--reset\");\r\n  submitButton = document.querySelector(\".contact__form-button--submit\");\r\n  // All sections on the page\r\n  allSections = document.querySelectorAll(\".page-section\");\r\n  // All input elements inside the contact form\r\n  contactFormControls = document.querySelectorAll(\".contact__form-input\");\r\n\r\n  navbarHeight = navbar.offsetHeight;\r\n}\r\n\r\nconst addListeners = () => {\r\n  toggleButton.addEventListener(\"click\", toggleNavbarMenu);\r\n  overlay.addEventListener(\"click\", closeNavbarMenu);\r\n  resetButton.addEventListener(\"click\", handleFormClear);\r\n  submitButton.addEventListener(\"click\", handleFormClear);\r\n\r\n  window.addEventListener(\"resize\", () => window.innerWidth >= 992 && closeNavbarMenu());\r\n  window.addEventListener(\"scroll\", handleScrollSpy);\r\n}\r\n\r\nconst handleFormClear = (event) => {\r\n  event.preventDefault();\r\n\r\n  contactFormControls.forEach((input) => input.value = \"\");\r\n}\r\n\r\nconst toggleNavbarMenu = () => {\r\n  toggleButton.classList.toggle(\"navbar__burger-icon--active\");\r\n  navbarLinksContainer.classList.toggle(\"navbar__links--active\");\r\n  overlay.classList.toggle(\"navbar__overlay--active\");\r\n\r\n  if (navbarLinksContainer.classList.contains(\"navbar__links--active\")) {\r\n    toggleButton.setAttribute(\"aria-expanded\", \"true\");\r\n    toggleButton.setAttribute(\"aria-label\", \"Zamknij menu nawigacyjne\");\r\n  } else {\r\n    toggleButton.setAttribute(\"aria-expanded\", \"false\");\r\n    toggleButton.setAttribute(\"aria-label\", \"Otwórz menu nawigacyjne\");\r\n  }\r\n}\r\n\r\nconst closeNavbarMenu = () => {\r\n  overlay.classList.remove(\"navbar__overlay--active\");\r\n  toggleButton.classList.remove(\"navbar__burger-icon--active\");\r\n  toggleButton.setAttribute(\"aria-expanded\", \"false\");\r\n  toggleButton.setAttribute(\"aria-label\", \"Otwórz menu nawigacyjne\");\r\n  navbarLinksContainer.classList.remove(\"navbar__links--active\");\r\n}\r\n\r\nconst handleScrollSpy = () => {\r\n  // We want the scroll spy to work only on the main page:\r\n  if (document.body.dataset.mainPage === \"true\") {\r\n    const sections = []; // Sections for which `offsetHeight` + `offsetTop` - navbarHeight <= `window.scrollY`\r\n\r\n    allSections.forEach((section) => {\r\n      if (window.scrollY <= section.offsetHeight + section.offsetTop - navbarHeight) {\r\n        sections.push(section);\r\n      }\r\n    });\r\n\r\n    allSections.forEach((section) => section.classList.remove(\"page-section--active\"));\r\n    sections[0].classList.add(\"page-section--active\");\r\n\r\n    let activeSectionId;\r\n    allSections.forEach((section) => section.classList.contains(\"page-section--active\") && (activeSectionId = section.id));\r\n\r\n    navbarLinks.forEach((navbarLink) => navbarLink.classList.remove(\"navbar__link--active\"));\r\n    document.querySelector(`.navbar__link[href*=\"${activeSectionId}\"]`).classList.add(\"navbar__link--active\");\r\n  }\r\n}\r\n\r\nconst setFooterYear = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  footerYear.textContent = currentYear;\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", main);"]}