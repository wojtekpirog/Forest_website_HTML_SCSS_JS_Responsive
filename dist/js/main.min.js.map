{"version":3,"sources":["main.js"],"names":["navbar","toggleButton","navbarLinksContainer","navbarLinks","overlay","navbarHeight","firstNameInput","lastNameInput","emailAddressInput","contactSelect","messageTextarea","charsCounter","resetButton","submitButton","footerYear","allSections","contactFormControls","prepareDOMElements","document","querySelector","querySelectorAll","offsetHeight","innerHTML","concat","value","length","maxLength","addListeners","addEventListener","toggleNavbarMenu","closeNavbarMenu","handleTextarea","handleFormClear","handleFormSubmit","window","innerWidth","handleScrollSpy","event","preventDefault","forEach","input","checkForm","checkEmailAddress","checkSelect","showModal","inputs","showError","previousElementSibling","textContent","slice","clearError","test","message","style","borderColor","parentElement","errorCount","errorBox","console","log","classList","toggle","contains","setAttribute","remove","body","dataset","mainPage","activeSectionId","sections","section","scrollY","offsetTop","push","add","id","navbarLink","setFooterYear","currentYear","Date","getFullYear"],"mappings":"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","file":"main.min.js","sourcesContent":["// Navbar\r\nlet navbar;\r\nlet toggleButton;\r\nlet navbarLinksContainer;\r\nlet navbarLinks;\r\n// Overlay\r\nlet overlay;\r\n// `offsetHeight` of navbar\r\nlet navbarHeight;\r\n// Contact form controls\r\nlet firstNameInput;\r\nlet lastNameInput;\r\nlet emailAddressInput;\r\nlet contactSelect;\r\nlet messageTextarea;\r\n// Chars counter\r\nlet charsCounter;\r\n// Contact form buttons\r\nlet resetButton;\r\nlet submitButton;\r\n// Footer\r\nlet footerYear;\r\n// All sections on the page that need to be spied on when scrolling\r\nlet allSections;\r\n// All input elements inside the contact form\r\nlet contactFormControls;\r\n\r\nconst main = () => {\r\n  prepareDOMElements();\r\n  addListeners();\r\n  setFooterYear();\r\n}\r\n\r\nconst prepareDOMElements = () => {\r\n  navbar = document.querySelector(\".navbar\");\r\n  toggleButton = document.querySelector(\".navbar__burger-icon\");\r\n  navbarLinksContainer = document.querySelector(\".navbar__links\");\r\n  navbarLinks = document.querySelectorAll(\".navbar__link\");\r\n  // Overlay\r\n  overlay = document.querySelector(\".navbar__overlay\");\r\n  // Footer\r\n  footerYear = document.querySelector(\".footer__copyright-year\");\r\n  // Contact form controls\r\n  firstNameInput = document.querySelector(\"#first-name\");\r\n  lastNameInput = document.querySelector(\"#last-name\");\r\n  emailAddressInput = document.querySelector(\"#email\");\r\n  contactSelect = document.querySelector(\"#reason\");\r\n  messageTextarea = document.querySelector(\"#message\");\r\n  // Chars counter\r\n  charsCounter = document.querySelector(\".contact__form-counter\");\r\n  // Contact form buttons\r\n  resetButton = document.querySelector(\".contact__form-button--reset\");\r\n  submitButton = document.querySelector(\".contact__form-button--submit\");\r\n  // All sections on the page\r\n  allSections = document.querySelectorAll(\".page-section\");\r\n  // All input elements inside the contact form\r\n  contactFormControls = document.querySelectorAll(\".contact__form-input\");\r\n\r\n  navbarHeight = navbar.offsetHeight;\r\n  charsCounter.innerHTML = `<span>${messageTextarea.value.length}</span>/${messageTextarea.maxLength}`;\r\n}\r\n\r\nconst addListeners = () => {\r\n  toggleButton.addEventListener(\"click\", toggleNavbarMenu);\r\n  overlay.addEventListener(\"click\", closeNavbarMenu);\r\n  messageTextarea.addEventListener(\"input\", handleTextarea);\r\n  resetButton.addEventListener(\"click\", handleFormClear);\r\n  submitButton.addEventListener(\"click\", handleFormSubmit);\r\n\r\n  window.addEventListener(\"resize\", () => window.innerWidth >= 992 && closeNavbarMenu());\r\n  window.addEventListener(\"scroll\", handleScrollSpy);\r\n}\r\n\r\n// Form-related functions\r\n\r\nconst handleFormClear = (event) => {\r\n  event.preventDefault();\r\n\r\n  contactFormControls.forEach((input) => input.value = \"\");\r\n}\r\n\r\nconst handleFormSubmit = (event) => {\r\n  event.preventDefault();\r\n\r\n  checkForm([firstNameInput, lastNameInput, emailAddressInput, messageTextarea]);\r\n  checkEmailAddress(emailAddressInput);\r\n  checkSelect(contactSelect);\r\n  showModal();\r\n}\r\n\r\nconst checkForm = (inputs) => {\r\n  inputs.forEach((input) => {\r\n    input.value === \"\" ? showError(input, `Pole \"${input.previousElementSibling.textContent.slice(0, -2)}\" nie może być puste`) : clearError(input);\r\n  });\r\n}\r\n\r\nconst checkEmailAddress = (emailAddressInput) => {\r\n  const regExp = /^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/;\r\n  \r\n  if (emailAddressInput.value === \"\") {\r\n    showError(emailAddressInput, 'Pole \"Adres e-mail\" nie może być puste');\r\n  } else if (!regExp.test(emailAddressInput.value)) {\r\n    showError(emailAddressInput, 'Adres e-mail jest nieprawidłowy');\r\n  } else {\r\n    clearError(emailAddressInput);\r\n  }\r\n}\r\n\r\nconst checkSelect = (contactSelect) => {\r\n  if (contactSelect.value === \"\") {\r\n    showError(contactSelect, \"Powiedz nam, w jakiej sprawie piszesz\");\r\n  } else {\r\n    clearError(contactSelect);\r\n  }\r\n}\r\n\r\nconst handleTextarea = () => {\r\n  charsCounter.innerHTML = `<p class=\"contact__form-counter\"><span>${messageTextarea.value.length}</span>/${messageTextarea.maxLength}</p>`;\r\n\r\n  if (messageTextarea.value.length === messageTextarea.maxLength) {\r\n    messageTextarea.value = messageTextarea.value.slice(0, messageTextarea.maxLength + 1);\r\n    showError(messageTextarea, `Osiągnięto limit ${messageTextarea.maxLength} znaków.`);\r\n  } else {\r\n    clearError(messageTextarea);\r\n  }\r\n}\r\n\r\nconst showError = (input, message) => {\r\n  input.style.borderColor = \"hsl(0, 100%, 40%)\";\r\n  input.parentElement.querySelector(\".contact__form-error\").textContent = message;\r\n}\r\n\r\nconst clearError = (input) => {\r\n  input.style.borderColor = \"hsl(0, 0%, 25%)\";\r\n  input.parentElement.querySelector(\".contact__form-error\").textContent = \"\";\r\n}\r\n\r\nconst showModal = () => {\r\n  let errorCount = 0;\r\n  \r\n  const errorsBoxes = document.querySelectorAll(\".contact__form-error\");\r\n  errorsBoxes.forEach((errorBox) => errorBox.textContent !== \"\" && (errorCount += 1));\r\n\r\n  errorCount === 0 ? console.log(\"Wysyłanie formularza\") : console.log(\"Formularz nie został wysłany\");\r\n}\r\n\r\n// Navbar-related functions\r\n\r\nconst toggleNavbarMenu = () => {\r\n  toggleButton.classList.toggle(\"navbar__burger-icon--active\");\r\n  navbarLinksContainer.classList.toggle(\"navbar__links--active\");\r\n  overlay.classList.toggle(\"navbar__overlay--active\");\r\n\r\n  if (navbarLinksContainer.classList.contains(\"navbar__links--active\")) {\r\n    toggleButton.setAttribute(\"aria-expanded\", \"true\");\r\n    toggleButton.setAttribute(\"aria-label\", \"Zamknij menu nawigacyjne\");\r\n  } else {\r\n    toggleButton.setAttribute(\"aria-expanded\", \"false\");\r\n    toggleButton.setAttribute(\"aria-label\", \"Otwórz menu nawigacyjne\");\r\n  }\r\n}\r\n\r\nconst closeNavbarMenu = () => {\r\n  overlay.classList.remove(\"navbar__overlay--active\");\r\n  toggleButton.classList.remove(\"navbar__burger-icon--active\");\r\n  toggleButton.setAttribute(\"aria-expanded\", \"false\");\r\n  toggleButton.setAttribute(\"aria-label\", \"Otwórz menu nawigacyjne\");\r\n  navbarLinksContainer.classList.remove(\"navbar__links--active\");\r\n}\r\n\r\n// Scroll spy\r\n\r\nconst handleScrollSpy = () => {\r\n  // We want the scroll spy to work only on the main page:\r\n  if (document.body.dataset.mainPage === \"true\") {\r\n    const sections = []; // Sections for which `offsetHeight` + `offsetTop` - navbarHeight <= `window.scrollY`\r\n\r\n    allSections.forEach((section) => {\r\n      if (window.scrollY <= section.offsetHeight + section.offsetTop - navbarHeight) {\r\n        sections.push(section);\r\n      }\r\n    });\r\n\r\n    allSections.forEach((section) => section.classList.remove(\"page-section--active\"));\r\n    sections[0].classList.add(\"page-section--active\");\r\n\r\n    let activeSectionId;\r\n    allSections.forEach((section) => section.classList.contains(\"page-section--active\") && (activeSectionId = section.id));\r\n\r\n    navbarLinks.forEach((navbarLink) => navbarLink.classList.remove(\"navbar__link--active\"));\r\n    document.querySelector(`.navbar__link[href*=\"${activeSectionId}\"]`).classList.add(\"navbar__link--active\");\r\n  }\r\n}\r\n\r\nconst setFooterYear = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  footerYear.textContent = currentYear;\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", main);"]}