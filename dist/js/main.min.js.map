{"version":3,"sources":["main.js"],"names":["navbar","toggleButton","navbarLinksContainer","navbarLinks","overlay","navbarHeight","firstNameInput","lastNameInput","emailAddressInput","messageTextarea","charsCounter","resetButton","submitButton","footerYear","allSections","contactFormControls","prepareDOMElements","document","querySelector","querySelectorAll","offsetHeight","innerHTML","concat","value","length","maxLength","addListeners","addEventListener","toggleNavbarMenu","closeNavbarMenu","handleTextarea","handleFormClear","handleFormSubmit","window","innerWidth","handleScrollSpy","event","preventDefault","forEach","input","checkForm","checkEmailAddress","inputs","showError","previousElementSibling","textContent","slice","clearError","test","message","style","borderColor","nextElementSibling","classList","add","remove","toggle","contains","setAttribute","body","dataset","mainPage","activeSectionId","sections","section","scrollY","offsetTop","push","id","navbarLink","setFooterYear","currentYear","Date","getFullYear"],"mappings":"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","file":"main.min.js","sourcesContent":["// Navbar\r\nlet navbar;\r\nlet toggleButton;\r\nlet navbarLinksContainer;\r\nlet navbarLinks;\r\n// Overlay\r\nlet overlay;\r\n// `offsetHeight` of navbar\r\nlet navbarHeight;\r\n// Contact form controls\r\nlet firstNameInput;\r\nlet lastNameInput;\r\nlet emailAddressInput;\r\nlet contactSelect;\r\nlet messageTextarea;\r\n// Chars counter\r\nlet charsCounter;\r\n// Contact form buttons\r\nlet resetButton;\r\nlet submitButton;\r\n// Footer\r\nlet footerYear;\r\n// All sections on the page that need to be spied on when scrolling\r\nlet allSections;\r\n// All input elements inside the contact form\r\nlet contactFormControls;\r\n\r\nconst main = () => {\r\n  prepareDOMElements();\r\n  addListeners();\r\n  setFooterYear();\r\n}\r\n\r\nconst prepareDOMElements = () => {\r\n  navbar = document.querySelector(\".navbar\");\r\n  toggleButton = document.querySelector(\".navbar__burger-icon\");\r\n  navbarLinksContainer = document.querySelector(\".navbar__links\");\r\n  navbarLinks = document.querySelectorAll(\".navbar__link\");\r\n  // Overlay\r\n  overlay = document.querySelector(\".navbar__overlay\");\r\n  // Footer\r\n  footerYear = document.querySelector(\".footer__copyright-year\");\r\n  // Contact form controls\r\n  firstNameInput = document.querySelector(\"#first-name\");\r\n  lastNameInput = document.querySelector(\"#last-name\");\r\n  emailAddressInput = document.querySelector(\"#email\");\r\n  contactSelect = document.querySelector(\"#reason\");\r\n  messageTextarea = document.querySelector(\"#message\");\r\n  // Chars counter\r\n  charsCounter = document.querySelector(\".contact__form-counter\");\r\n  // Contact form buttons\r\n  resetButton = document.querySelector(\".contact__form-button--reset\");\r\n  submitButton = document.querySelector(\".contact__form-button--submit\");\r\n  // All sections on the page\r\n  allSections = document.querySelectorAll(\".page-section\");\r\n  // All input elements inside the contact form\r\n  contactFormControls = document.querySelectorAll(\".contact__form-input\");\r\n\r\n  navbarHeight = navbar.offsetHeight;\r\n  charsCounter.innerHTML = `<span>${messageTextarea.value.length}</span>/${messageTextarea.maxLength}`;\r\n}\r\n\r\nconst addListeners = () => {\r\n  toggleButton.addEventListener(\"click\", toggleNavbarMenu);\r\n  overlay.addEventListener(\"click\", closeNavbarMenu);\r\n  messageTextarea.addEventListener(\"input\", handleTextarea);\r\n  resetButton.addEventListener(\"click\", handleFormClear);\r\n  submitButton.addEventListener(\"click\", handleFormSubmit);\r\n\r\n  window.addEventListener(\"resize\", () => window.innerWidth >= 992 && closeNavbarMenu());\r\n  window.addEventListener(\"scroll\", handleScrollSpy);\r\n}\r\n\r\n// Form-related functions\r\n\r\nconst handleFormClear = (event) => {\r\n  event.preventDefault();\r\n\r\n  contactFormControls.forEach((input) => input.value = \"\");\r\n}\r\n\r\nconst handleFormSubmit = (event) => {\r\n  event.preventDefault();\r\n\r\n  checkForm([firstNameInput, lastNameInput, emailAddressInput, messageTextarea]);\r\n  checkEmailAddress(emailAddressInput);\r\n  // checkSelect(contactSelect);\r\n  // showModal();\r\n}\r\n\r\nconst checkForm = (inputs) => {\r\n  inputs.forEach((input) => {\r\n    input.value === \"\" ? showError(input, `Pole \"${input.previousElementSibling.textContent.slice(0, -2)}\" nie może być puste`) : clearError(input);\r\n  });\r\n}\r\n\r\nconst handleTextarea = () => {\r\n  charsCounter.innerHTML = `<span>${messageTextarea.value.length}</span>/${messageTextarea.maxLength}`;\r\n\r\n  if (messageTextarea.value.length === messageTextarea.maxLength) {\r\n    messageTextarea.value = messageTextarea.value.slice(0, messageTextarea.maxLength + 1);\r\n    showError(messageTextarea, `Osiągnięto limit ${messageTextarea.maxLength} znaków.`);\r\n  } else {\r\n    clearError(messageTextarea);\r\n  }\r\n}\r\n\r\nconst checkEmailAddress = (emailAddressInput) => {\r\n  const regExp = /^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/;\r\n  \r\n  if (emailAddressInput.value === \"\") {\r\n    showError(emailAddressInput, 'Pole \"Adres e-mail\" nie może być puste');\r\n  } else if (!regExp.test(emailAddressInput.value)) {\r\n    showError(emailAddressInput, 'Adres e-mail jest nieprawidłowy');\r\n  } else {\r\n    clearError(emailAddressInput);\r\n  }\r\n}\r\n\r\nconst showError = (input, message) => {\r\n  input.style.borderColor = \"hsl(0, 100%, 40%)\";\r\n  input.nextElementSibling.classList.add(\"contact__form-error--active\");\r\n  input.nextElementSibling.textContent = message;\r\n}\r\n\r\nconst clearError = (input) => {\r\n  input.style.borderColor = \"hsl(0, 0%, 25%)\";\r\n  input.nextElementSibling.classList.remove(\"contact__form-error--active\");\r\n  input.nextElementSibling.textContent = \"\";\r\n}\r\n\r\n// Navbar-related functions\r\n\r\nconst toggleNavbarMenu = () => {\r\n  toggleButton.classList.toggle(\"navbar__burger-icon--active\");\r\n  navbarLinksContainer.classList.toggle(\"navbar__links--active\");\r\n  overlay.classList.toggle(\"navbar__overlay--active\");\r\n\r\n  if (navbarLinksContainer.classList.contains(\"navbar__links--active\")) {\r\n    toggleButton.setAttribute(\"aria-expanded\", \"true\");\r\n    toggleButton.setAttribute(\"aria-label\", \"Zamknij menu nawigacyjne\");\r\n  } else {\r\n    toggleButton.setAttribute(\"aria-expanded\", \"false\");\r\n    toggleButton.setAttribute(\"aria-label\", \"Otwórz menu nawigacyjne\");\r\n  }\r\n}\r\n\r\nconst closeNavbarMenu = () => {\r\n  overlay.classList.remove(\"navbar__overlay--active\");\r\n  toggleButton.classList.remove(\"navbar__burger-icon--active\");\r\n  toggleButton.setAttribute(\"aria-expanded\", \"false\");\r\n  toggleButton.setAttribute(\"aria-label\", \"Otwórz menu nawigacyjne\");\r\n  navbarLinksContainer.classList.remove(\"navbar__links--active\");\r\n}\r\n\r\n// Scroll spy\r\n\r\nconst handleScrollSpy = () => {\r\n  // We want the scroll spy to work only on the main page:\r\n  if (document.body.dataset.mainPage === \"true\") {\r\n    const sections = []; // Sections for which `offsetHeight` + `offsetTop` - navbarHeight <= `window.scrollY`\r\n\r\n    allSections.forEach((section) => {\r\n      if (window.scrollY <= section.offsetHeight + section.offsetTop - navbarHeight) {\r\n        sections.push(section);\r\n      }\r\n    });\r\n\r\n    allSections.forEach((section) => section.classList.remove(\"page-section--active\"));\r\n    sections[0].classList.add(\"page-section--active\");\r\n\r\n    let activeSectionId;\r\n    allSections.forEach((section) => section.classList.contains(\"page-section--active\") && (activeSectionId = section.id));\r\n\r\n    navbarLinks.forEach((navbarLink) => navbarLink.classList.remove(\"navbar__link--active\"));\r\n    document.querySelector(`.navbar__link[href*=\"${activeSectionId}\"]`).classList.add(\"navbar__link--active\");\r\n  }\r\n}\r\n\r\nconst setFooterYear = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  footerYear.textContent = currentYear;\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", main);"]}